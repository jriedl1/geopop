name: docs-build
on:
    pull_request:
        branches:
            - main
            - master

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Cache Python dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install GDAL
              run: |
                  python -m pip install --upgrade pip
                  pip install --find-links=https://girder.github.io/large_image_wheels --no-cache GDAL pyproj

            - name: Test GDAL installation
              run: |
                  python -c "from osgeo import gdal"
                  gdalinfo --version

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install --no-cache-dir Cython
                  pip install -r requirements.txt -r requirements_dev.txt
                  pip install .

            - name: Validate requirements files
              run: |
                  python -m pip check

            - name: Discover typos with codespell
              run: codespell --skip="*.csv,*.geojson,*.json,*.js,*.html,*cff,*.pdf,./.git" --ignore-words-list="aci,acount,hist"

            - name: Lint Markdown files
              run: |
                  pip install markdownlint-cli
                  markdownlint docs/**/*.md

            - name: PKG-TEST
              run: |
                  python -m unittest discover tests/

            - name: Build docs
              run: |
                  mkdocs build

            - name: Check for broken links
              run: |
                  pip install mkdocs-link-check
                  mkdocs build
                  mkdocs-link-check ./site

            - name: Test documentation locally
              run: |
                  mkdocs serve --dev-addr=0.0.0.0:8000 &
                  sleep 10
                  curl -I http://localhost:8000

            - name: Upload built documentation
              uses: actions/upload-artifact@v3
              with:
                  name: built-docs
                  path: ./site

            # - name: Deploy to Netlify
            #   uses: nwtgck/actions-netlify@v2.0
            #   with:
            #       publish-dir: "./site"
            #       production-branch: main
            #       github-token: ${{ secrets.GITHUB_TOKEN }}
            #       deploy-message: "Deploy from GitHub Actions"
            #       enable-pull-request-comment: true
            #       enable-commit-comment: false
            #       overwrites-pull-request-comment: true
            #   env:
            #       NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
            #       NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
            #   timeout-minutes: 10