name: Windows build

on:
    push:
        branches:
            - main
            - master
    pull_request:
        branches:
            - main
            - master

jobs:
    py-check:
        runs-on: windows-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.9", "3.10", "3.11", "3.12"]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Cache Python dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install --no-cache-dir Cython
                  pip install -r requirements.txt
                  pip install .

            - name: Install development dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements_dev.txt

            - name: Validate dependencies
              run: python -m pip check

            - name: Test package import
              run: python -c "import geopop; print('geopop import successful')"

            - name: Test functionality
              run: python -c "from geopop import Map; print('Map class loaded successfully')"

            - name: Run unit tests
              run: python -m unittest discover tests/