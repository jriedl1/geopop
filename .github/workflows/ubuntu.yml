on:
    push:
        branches:
            - main
            - master
    pull_request:
        branches:
            - main
            - master

name: Linux build
jobs:
    py-check:
        runs-on: ${{ matrix.config.os }}
        name: ${{ matrix.config.os }} (${{ matrix.config.py }})
        strategy:
            fail-fast: false
            matrix:
                config:
                    - { os: ubuntu-latest, py: "3.9" }
                    - { os: ubuntu-latest, py: "3.10" }
                    - { os: ubuntu-latest, py: "3.11" }
                    - { os: ubuntu-latest, py: "3.12" }
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.config.py }}

            - name: Cache Python dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install GDAL
              run: |
                  python -m pip install --upgrade pip
                  pip install --no-cache-dir Cython
                  pip install --find-links=https://girder.github.io/large_image_wheels --no-cache GDAL

            - name: Test GDAL installation
              run: |
                  python -c "from osgeo import gdal"
                  gdalinfo --version

            - name: Install dependencies
              run: |
                  pip install --user -r requirements.txt
                  pip install .

            - name: Install development dependencies
              run: |
                  pip install -r requirements_dev.txt

            - name: Validate dependencies
              run: python -m pip check

            - name: Test package import
              run: python -c "import geopop; print('geopop import successful')"

            - name: Test functionality
              run: python -c "from geopop import Map; print('Map class loaded successfully')"

            - name: Run unit tests
              run: |
                  python -m unittest discover tests/